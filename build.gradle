apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'co.fastestpath.api.FastestPathApplication'

dependencies {
  compile project(':utils')
  compile project(':gtfs')
  compile project(':core')
}

buildscript {
  ext.kotlinVersion = '1.2.10'

  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:' + kotlinVersion
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
  }
}

allprojects {
  apply plugin: 'idea'
}

subprojects {
  apply plugin: 'java'

  version = '1.0'

  sourceCompatibility = 1.9
  targetCompatibility = 1.9

  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    compile 'commons-io:commons-io:2.5'

    compile 'org.jetbrains.kotlin:kotlin-stdlib'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8'

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:' + kotlinVersion

    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.8.1'

    testCompile 'org.testng:testng:6.10'
    testCompile 'org.mockito:mockito-core:2.8.47'
  }

  test {
    useTestNG()
  }
}

run {
  args = ['server', 'development.yml']
}

shadowJar {
  mergeServiceFiles()
  exclude 'META-INF/*.SF'
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

idea {
  module {
    name = 'fastestpath'

    jdkName = '1.9'

    excludeDirs += file('.idea')
    excludeDirs += file('.gradle')
    excludeDirs += file('gradle')
    excludeDirs += file('out')
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.3.1'
}

// override jar task with shadowJar
tasks.jar.enabled = false
assemble.dependsOn(shadowJar)

